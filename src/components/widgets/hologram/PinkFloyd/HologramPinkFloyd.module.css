/* HOLGORAM CARD: LINEAR */
.container {
    --width: 480px;
    --height: 300px;
    width: var(--width);
    height: var(--height);
}

.variables {
    --m-x: 50%;
    --m-y: 50%;
    --r-x: 0deg;
    --r-y: 0deg;
    --bg-x: 50%;
    --bg-y: 50%;
    --radius: 0px;
    --perspective: 600px;
    --opacity: .5;
    --duration: 300ms;
    --foil-size: 20%;
    --easing: ease;
    --transition: var(--duration) var(--easing);
    position: relative;
    isolation: isolate;
    contain: layout style;
    perspective: var(--perspective);
    transition-property: transform;
    will-change: transform;
    width: 100%;
    height: 100%;
}

.card {
    height: 100%;
    display: grid;
    will-change: transform;
    transform-origin: center center;
    transition-duration: 200ms;
    transition-property: transform;
    transform: rotateY(var(--r-x)) rotateX(var(--r-y));
    border-radius: var(--radius);
    border-width: 1px;
    border-style: solid;
    border-color: rgb(28, 28, 28);
    border-image: initial;
}

.card > * {
    width: 100%;
    height: 100%;
    display: grid;
    grid-area: 1 / 1 / auto / auto;
    clip-path: inset(0 0 0 0 round var(--radius));
}

.imageContainer {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.image {
    object-fit: cover;
}

.cursourHighlight {
    mix-blend-mode: hard-light;
    opacity: var(--opacity);
    will-change: background;
    transition-property: opacity, background;
    background: 
        radial-gradient( 
            circle at var(--m-x) var(--m-y), 
            rgba(0, 0, 0, 0.2) 200%, 
            rgba(0, 0, 0, 0.65) 40%, 
            rgba(255,255,255,0.2) 80% 
        );
}

.foil {
    mix-blend-mode: color-dodge; /* Original: color-dodge */
    opacity: var(--opacity);
    will-change: background;
    transition-property: opacity;
    clip-path: inset(0 0 1px 0 round var(--radius));
    --step: 5%;
    --pattern: url('../../../../../public/animations/holofoils/holofoil-1.jpg') center / var(--foil-size);
    --rainbow: 
        repeating-linear-gradient( 
            0deg, 
            rgb(255,119,115) calc(var(--step) * 1), 
            rgba(255,237,95,1) calc(var(--step) * 2), 
            rgba(168,255,95,1) calc(var(--step) * 3), 
            rgba(131,255,247,1) calc(var(--step) * 4), 
            rgba(120,148,255,1) calc(var(--step) * 5), 
            rgb(216,117,255) calc(var(--step) * 6), 
            rgb(255,119,115) calc(var(--step) * 7) 
        ) 0% var(--bg-y) / 200% 700%;
    --diagonal: 
        repeating-linear-gradient( 
            90deg, 
            #0e152e 0%, 
            hsl(180,10%,60%) 3.8%, 
            hsl(180,10%,60%) 4.5%, 
            hsl(180,10%,60%) 5.2%, 
            #0e152e 10%, 
            #0e152e 12% 
        ) var(--bg-x) var(--bg-y) / 300%;
    --shade: 
        radial-gradient( 
            farthest-corner circle at var(--m-x) var(--m-y), 
            rgba(255,255,255,0.1) 12%, 
            rgba(255,255,255,0.15) 20%, 
            rgba(255,255,255,0.25) 120% 
        ) var(--bg-x) var(--bg-y) / 300%;
    background-blend-mode: hue, hue, hard-light, overlay;
    background: var(--pattern),var(--rainbow),var(--diagonal),var(--shade);
}

.foil::after {
    content: "";
    grid-area: inherit;
    background-image: inherit;
    background-repeat: inherit;
    background-attachment: inherit;
    background-origin: inherit;
    background-clip: inherit;
    background-color: inherit;
    mix-blend-mode: exclusion;
    background-size: 
        var(--foil-size), 
        200% 400%, 
        800%, 
        200%;
    background-position: 
        center, 
        0% var(--bg-y), 
        calc(var(--bg-x) * -1) calc(var(--bg-y) * -1), 
        var(--bg-x) var(--bg-y);
    background-blend-mode: soft-light, hue, hard-light;
}